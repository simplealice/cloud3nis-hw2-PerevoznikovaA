{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\JS_Projects\\\\ToDoList\\\\todolist\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Task from './components/Task';\nimport TaskAdd from './components/TaskAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTodo = {\n        id: Math.random().toString(36).substr(2, 9),\n        task: userInput,\n        isComplete: false\n      };\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const removeTask = id => {\n    setTodos([...todos.filter(todo => todo.id !== id)]);\n  };\n\n  const changeState = id => {\n    setTodos([...todos.map(todo => todo.id === id ? { ...todo,\n      isComplete: !todo.isComplete\n    } : { ...todo\n    })]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"ToDoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"countOfTasks\",\n      children: [\"tasks: \", todos.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskAdd, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        todo: todo,\n        state: changeState,\n        removeTask: removeTask\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/JS/JS_Projects/ToDoList/todolist/src/App.js"],"names":["useState","Task","TaskAdd","App","todos","setTodos","addTask","userInput","newTodo","id","Math","random","toString","substr","task","isComplete","removeTask","filter","todo","changeState","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,SAAD,IAAe;AAC7B,QAAIA,SAAJ,EAAe;AACb,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CADU;AAEdC,QAAAA,IAAI,EAAEP,SAFQ;AAGdQ,QAAAA,UAAU,EAAE;AAHE,OAAhB;AAMAV,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,OAAX,CAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMQ,UAAU,GAAIP,EAAD,IAAQ;AACzBJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAnC,CAAJ,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAIV,EAAD,IAAQ;AAC1BJ,IAAAA,QAAQ,CAAC,CACP,GAAGD,KAAK,CAACgB,GAAN,CAAWF,IAAD,IACbA,IAAI,CAACT,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGS,IAAL;AAAWH,MAAAA,UAAU,EAAE,CAACG,IAAI,CAACH;AAA7B,KAAjB,GAA4D,EAAE,GAAGG;AAAL,KADzD,CADI,CAAD,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,4BAAqCd,KAAK,CAACiB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEf;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKIF,KAAK,CAACgB,GAAN,CAAWF,IAAD,IAAU;AACpB,0BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAGE,QAAA,KAAK,EAAEC,WAHT;AAIE,QAAA,UAAU,EAAEH;AAJd,SAEOE,IAAI,CAACT,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7CQN,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Task from './components/Task'\nimport TaskAdd from './components/TaskAdd';\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  \n  const addTask = (userInput) => {\n    if (userInput) {\n      const newTodo = {\n        id: Math.random().toString(36).substr(2, 9),\n        task: userInput,\n        isComplete: false\n      }\n\n      setTodos([...todos, newTodo])\n    }\n  }\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const changeState = (id) => {\n    setTodos([\n      ...todos.map((todo) =>\n      todo.id === id ? { ...todo, isComplete: !todo.isComplete} : { ...todo }\n      )\n    ])\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <h1 className=\"title\">ToDoList</h1>\n      <h1 className=\"countOfTasks\">tasks: {todos.length}</h1>\n\n      <TaskAdd addTask={addTask} />\n      { todos.map((todo) => {\n        return (\n          <Task\n            todo={todo}\n            key={todo.id} \n            state={changeState}\n            removeTask={removeTask}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}